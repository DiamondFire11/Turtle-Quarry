---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Will.
--- DateTime: 12/1/2020 4:42 PM
---
local modem = peripheral.wrap("back")

local SERVER = 450
local CLIENT = 451

-- TWEAK THESE SETTINGS BASED ON SERVER GPS
-- THESE OFFSETS ARE CRITICAL TO CORRECT TURTLE POSITIONING
local yOffset = -2
local xOffset = -1
local zOffset = -1

os.loadAPI("diamondSTL/timeoutListen.lua")
os.loadAPI("diamondSTL/timeoutRead.lua")
os.loadAPI("diamondSTL/round.lua")

-- Main terminal loop
function main()
    while true do
        local location
        local taskCount = retrieveTaskCount()
        term.clear()
        term.setCursorPos(1,1)

        print("Diamond Quarry Client")
        while taskCount == nil do
            term.setCursorPos(1,3)
            print("Server busy! Please wait.")
            taskCount = retrieveTaskCount()
        end

        term.setCursorPos(1,3)
        term.clearLine()
        print("Active Tasks: ", (taskCount or "Unknown"))
        term.setCursorPos(1,19)
        local command = getCommand():upper()
        if taskCount < 4 or string.find(command, "DELETE") then
            if string.find(command, "NEW") then
                location = vector.new(gps.locate(5))
                command = command.." "..math.ceil(location.x)+xOffset.." "..math.ceil(location.y)+yOffset.." "..math.ceil(location.z)+zOffset
            end
            sendCommand(command) -- Send the command to the server via RedNet
            commandReceipt(command) -- Wait for the server to send a read receipt
        else
            term.setCursorPos(1,19)
            print("Task Queue Full")
            sleep(2)
        end
    end
end

-- Retrieve the active task count
function retrieveTaskCount()
    modem.transmit(SERVER,CLIENT,"update")
    return timeoutListen.timedListen(1, CLIENT, modem)
end

-- Gets a command from the user
function getCommand()
    return read()
end

-- Send the command entered by the user to the quarry server
function sendCommand(command)
    modem.transmit(SERVER,CLIENT, command)
end

-- Attempts to get the read receipt from the quarry server then displays it on the screen so the user knows
function commandReceipt(command)
    -- Listens to the server for 1 second and returns the incoming message
    local sendReceipt = timeoutListen.timedListen(1, CLIENT, modem)

    -- Print out the read receipt
    term.setCursorPos(3,13)
    print((sendReceipt or "ERROR READ TIMED OUT")) -- Print read timed out if server is unreachable

    -- Check if the server understood the command, if not print the entered command
    if sendReceipt == "Unknown Command" then
        term.setCursorPos(3,14)
        print(command)
    end
    sleep(1)
end

main()